<?php/** * Created by PhpStorm. * User: George * Date: 03.01.2018 * Time: 9:59 */namespace common\base\models\nestedSets;use yii\base\ErrorException;use yii\db\Expression;use yii\db\ActiveQuery;use common\base\models\BaseActiveRecord;/** * Class MyNestedSetsActiveQuery * @package common\components * * @see NSActiveRecord */class NSActiveQuery extends ActiveQuery {    /**     * @inheritdoc     */    public function __construct($modelClass, $config = []) {        if (!is_subclass_of($modelClass, NSActiveRecord::className())) {            throw new ErrorException('This NSActiveQuery uses for NSActiveRecord instances only');        }        parent::__construct($modelClass, $config);    }    /**     * Gets the root nodes.     * @return \yii\db\ActiveQuery the owner     */    public function roots() {        /**         * @var $model \common\base\models\nestedSets\NSActiveRecord         */        $model = new $this->modelClass();        $this            ->andWhere([$model->leftAttribute => 1])            ->addOrderBy([$model->primaryKey()[0] => SORT_ASC]);        return $this;    }    /**     * Gets the leaf nodes.     * @return \yii\db\ActiveQuery the owner     */    public function leaves()    {        /**         * @var $model \common\base\models\nestedSets\NSActiveRecord         */        $model = new $this->modelClass();        $db = $model->getDb();        $columns = [$model->leftAttribute => SORT_ASC];        if ($model->treeAttribute !== false) {            $columns = [$model->treeAttribute => SORT_ASC] + $columns;        }        $this            ->andWhere([$model->rightAttribute => new Expression($db->quoteColumnName($model->leftAttribute) . '+ 1')])            ->addOrderBy($columns);        return $this;    }}